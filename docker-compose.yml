version: '3.8'

services:
  nginx: 
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - distributedsystem
      - distributedsystemspare
    networks:
      - link-network

  distributedsystem:
    image: ${DOCKER_REGISTRY-}distributedsystem
    build:
      context: .
      dockerfile: DistributedSystem/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "802:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks: 
      - link-network

  distributedsystemspare:
    image: ${DOCKER_REGISTRY-}distributedsystemspare
    build:
      context: .
      dockerfile: DistributedSystem/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "801:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks: 
      - link-network

  consumer:
    image: ${DOCKER_REGISTRY-}consumerlinks
    build:
      context: .
      dockerfile: ConsumerLinks/Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8082:8080"
    depends_on:
      - rabbitmq
    networks:
      - link-network

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_DB: "link"
      POSTGRES_USER: "stbmte"
      POSTGRES_PASSWORD: "123456"
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - link-network
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pg.org
      PGADMIN_DEFAULT_PASSWORD: 123456
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    networks:
      - link-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    volumes:
      - ./Rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - link-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  link-network:
    driver: bridge

volumes:
    postgres:
    pgadmin: